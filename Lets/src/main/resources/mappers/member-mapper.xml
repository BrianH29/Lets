<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

<resultMap id="memberResultSet" type="Member">
	<id column="mem_id" property="memId" />
	<result column="mem_pwd" property="memPwd" />
	<result column="mem_name" property="memName" />
	<result column="nickname" property="nickname" />
	<result column="birthday" property="birthday"/>
	<result column="gender" property="gender"/>
	<result column="address" property="address"/>
	<result column="phone" property="phone"/>
	<result column="mem_pic" property="memPic"/>
	<result column="enroll_date" property="enrollDate"/>
	<result column="modify_date" property="modifyDate"/>
	<result column="report_count" property="reportCount"/>
	<result column="out_date" property="outDate"/>
	<result column="status" property="status"/>
</resultMap>

<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
	select
	          mem_id
	        , mem_pwd
	        , mem_name
	        , nickname
	        , birthday
	        , gender
	        , postcode
		    , post_address
		    , detail_address
		    , extra_address 
	        , phone
	        , mem_pic
	        , enroll_date
	        , status
	     from member
	    where status='Y'
	      and mem_id like #{memId}
</select>

<insert id="insertMember" parameterType="Member">
	insert
		  into member
		  (
		     mem_no
		   , mem_id
		   , mem_pwd
		   , mem_name
		   , nickname
		   , birthday
		   , gender
		   , postcode
		   , post_address
		   , detail_address
		   , extra_address
		   , phone
		   , mem_pic
		  )
		  values
		  (
		     SEQ_MNO.NEXTVAL
		   , #{memId}
		   , #{memPwd}
		   , #{memName}
		   , #{nickname}
		   , #{birthday}
		   , #{gender}
		   , #{postcode}
		   , #{postAddress}
		   , #{detailAddress}
		   , #{extraAddress}
		   , #{phone}
		   , #{memPic}
		  )
</insert>

<select id="idCheck" parameterType="String" resultType="_int">
	select
	       count(*)
	  from member
	 where mem_id like #{memId}
</select>

<select id="nicknameCheck" parameterType="String" resultType="_int">
	select
	       count(*)
	  from member
	 where nickname like #{nickname}
</select>

<select id="findId" parameterType="Member" resultMap="memberResultSet">
	select
	       mem_id
	     , enroll_date
	  from member
	 where birthday like #{birthday}
	   and mem_name like #{memName}
</select>

<select id="selectMember" parameterType="String" resultMap="memberResultSet">
	select
	          mem_id
	        , mem_pwd
	        , mem_name
	        , nickname
	        , birthday
	        , gender
	        , postcode
		    , post_address
		    , detail_address
		    , extra_address
	        , phone
	        , mem_pic
	        , enroll_date
	        , status
	     from member
	    where status='Y'
	      and mem_id like #{memId}
</select>

<update id="updatePwd" parameterType="Member">
	update
	       member
	   set mem_pwd=#{memPwd}
	 where mem_id=#{memId}
</update>


</mapper>