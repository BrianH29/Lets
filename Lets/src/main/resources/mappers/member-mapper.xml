<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

<resultMap id="memberResultSet" type="Member">
	<id column="mem_no" property="memNo" />
	<result column="mem_id" property="memId" />
	<result column="mem_pwd" property="memPwd" />
	<result column="mem_name" property="memName" />
	<result column="nickname" property="nickname" />
	<result column="birthday" property="birthday"/>
	<result column="gender" property="gender"/>
	<result column="postcode" property="postcode"/>
	<result column="post_address" property="postAddress"/>
	<result column="detail_address" property="detailAddress"/>
	<result column="extra_address" property="extraAddress"/>
	<result column="phone" property="phone"/>
	<result column="mem_pic" property="memPic"/>
	<result column="enroll_date" property="enrollDate"/>
	<result column="modify_date" property="modifyDate"/>
	<result column="report_count" property="reportCount"/>
	<result column="out_date" property="outDate"/>
	<result column="status" property="status"/>
</resultMap>

<resultMap id="wishListResultSet" type="WishList">
	<result column="class_no" property="classNo" />
	<result column="mem_no" property="memNo" />
</resultMap>

<resultMap id="lessonResultSet" type="Lesson">
	<id column="lesson_no" property="lessonNo" />
	<result column="mem_no" property="memNo" />
	<result column="lesson_form" property="lessonForm" />
	<result column="lesson_type" property="lessonType" />
	<result column="lesson_category" property="lessonCategory" />
	<result column="lesson_title" property="lessonTitle" />
	<result column="lesson_cover_img" property="lessonCoverImg" />
	<result column="like_count" property="likeCount" />
	<result column="total_count" property="totalCount" />
	<result column="period" property="period" />
	<result column="disc_status" property="discStatus" />
	<result column="discount_period" property="discountPeriod" />
	<result column="discount" property="discount" />
	<result column="pay_total" property="payTotal" />
	<result column="status" property="status" />
	<result column="approve_date" property="approveDate"/>
</resultMap>

<resultMap type="MemPay" id="memPayResultSet">
	<id column="mem_pay_no" property="memPayNo" />
	<result column="mem_no" property="memNo" />
	<result column="lesson_no" property="lessonNo" />
	<result column="type" property="type" />
	<result column="repayment" property="repayment" />
	<result column="payment_date" property="paymentDate" />
	<result column="cancel_date" property="cancelDate" />
	<result column="status" property="status" />
	<result column="del_name" property="delName" />
	<result column="del_no" property="delNo" />
	<result column="del_status" property="delStatus" />
	<result column="lesson_title" property="lessonTitle" />
	<result column="mem_id" property="memId" />
	<result column="lesson_cover_img" property="lessonCoverImg" />
	<result column="lesson_prepare" property="lessonPrepare" />
	<result column="pay_total" property="payTotal" />
	<result column="discount_price" property="discountPrice" />
	<result column="total_amount" property="totalAmount" />
	<result column="mem_name" property="memName" />
	<result column="postcode" property="postcode" />
	<result column="post_address" property="postAddress" />
	<result column="detail_address" property="detailAddress" />
	<result column="extra_address" property="extraAddress" />
	<result column="phone" property="phone" />
</resultMap>

<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
	select
			  mem_no
	        , mem_id
	        , mem_pwd
	        , mem_name
	        , nickname
	        , birthday
	        , gender
	        , postcode
		    , post_address
		    , detail_address
		    , extra_address 
	        , phone
	        , mem_pic
	        , enroll_date
	        , status
	     from member
	    where status='Y'
	      and mem_id like #{memId}
</select>

<insert id="insertMember" parameterType="Member">
	insert
		  into member
		  (
		     mem_no
		   , mem_id
		   , mem_pwd
		   , mem_name
		   , nickname
		   , birthday
		   , gender
		   , postcode
		   , post_address
		   , detail_address
		   , extra_address
		   , phone
		   , mem_pic
		  )
		  values
		  (
		     SEQ_MNO.NEXTVAL
		   , #{memId}
		   , #{memPwd}
		   , #{memName}
		   , #{nickname}
		   , #{birthday}
		   , #{gender}
		   , #{postcode}
		   , #{postAddress}
		   , #{detailAddress}
		   , #{extraAddress}
		   , #{phone}
		   , #{memPic}
		  )
</insert>

<select id="idCheck" parameterType="String" resultType="_int">
	select
	       count(*)
	  from member
	 where mem_id like #{memId}
</select>

<select id="nicknameCheck" parameterType="String" resultType="_int">
	select
	       count(*)
	  from member
	 where nickname like #{nickname}
</select>

<select id="findId" parameterType="Member" resultMap="memberResultSet">
	select
	       mem_id
	     , enroll_date
	  from member
	 where birthday like #{birthday}
	   and mem_name like #{memName}
</select>

<select id="selectMember" parameterType="String" resultMap="memberResultSet">
	select
	          mem_id
	        , mem_pwd
	        , mem_name
	        , nickname
	        , birthday
	        , gender
	        , postcode
		    , post_address
		    , detail_address
		    , extra_address
	        , phone
	        , mem_pic
	        , enroll_date
	        , status
	     from member
	    where status='Y'
	      and mem_id like #{memId}
</select>

<update id="updatePwd" parameterType="Member">
	update
	       member
	   set mem_pwd=#{memPwd}
	 where mem_id=#{memId}
</update>

<update id="updateMember" parameterType="Member">
	update 
	       member
	   set mem_pwd=#{memPwd},
	       nickname=#{nickname},
	       birthday=#{birthday},
	       postcode=#{postcode},
	       post_address=#{postAddress},
	       detail_address=#{detailAddress},
	       extra_address=#{extraAddress},
	       phone=#{phone},
	       mem_pic=#{memPic},
	       modify_date=sysdate
	 where mem_id=#{memId}
</update>

<update id="deleteMember" parameterType="String">
	update
	       member
	   set status='N'
	 where mem_id=#{memId}
</update>

<select id="myWishList" parameterType="_int" resultMap="lessonResultSet">
	select *
	  from lesson l
	  join wishlist w 
	    on l.lesson_no=w.lesson_no
	 where w.mem_no=#{memNo}
	 order by l.lesson_no desc
</select>

<select id="myWishListCount" parameterType="_int" resultType="_int">
	select count(*)
	  from wishlist
	 where mem_no=#{memNo}
</select>

<select id="myDeliveryList" parameterType="_int" resultMap="memPayResultSet">
	select
	       mem_pay_no
	     , mp.mem_no
	     , mp.lesson_no
	     , l.lesson_title
	     , l.lesson_cover_img
	     , type
	     , repayment
	     , payment_date
	     , cancel_date
	     , mp.status
	     , del_name
	     , del_no
	     , del_status
	  from mem_pay mp
	  join lesson l
	    on mp.lesson_no=l.lesson_no
	 where mp.mem_no=#{memNo}
	 order by mem_pay_no desc
</select>

<select id="myDlistCount" parameterType="_int" resultType="_int">
	select count(*)
	  from mem_pay
	 where mem_no=#{memNo}
</select>

<select id="myDetailDelivery" parameterType="_int" resultMap="memPayResultSet">
	select
	       mem_pay_no
	     , lesson_title
	     , lesson_prepare
	     , pay_total
	     , pay_total*nvl(discount,0)/100 discount_price
	     , pay_total-pay_total*nvl(discount,0)/100 total_amount
	     , mem_name
	     , postcode
	     , post_address
	     , detail_address
	     , extra_address
	     , phone
	     , type
	     , repayment
	     , payment_date
	     , cancel_date
	     , mp.status
	     , del_name
	     , del_no
	     , del_status
	  from mem_pay mp
	  join lesson l
	    on mp.lesson_no=l.lesson_no
	  join member m
	    on mp.mem_no=m.mem_no
	 where mem_pay_no=#{memPayNo}
</select>

<update id="myUpdateDelivery" parameterType="_int">
	update mem_pay
	   set del_status='배송확정'
	 where mem_pay_no=#{memPayNo}
</update>

<update id="myCancelDelivery" parameterType="_int">
	update mem_pay
	   set status='결제 취소',
	       cancel_date=sysdate
	 where mem_pay_no=#{memPayNo}
</update>

<select id="showDiscountLesson" resultMap="lessonResultSet">
	<![CDATA[select 
			       *
			  from (
			        select
			               lesson_cover_img
			             , discount_period
			             , lesson_category
			             , like_count
			             , lesson_title
			             , approve_date 
			          from lesson
			         where status='Y'
			           and discount is not null
			         order 
			            by dbms_random.random 
			         )
			  where rownum <= 1]]>
</select>

</mapper>