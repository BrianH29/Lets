<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="curriculumMapper">

	<!-- resultMap -->
 	<resultMap type="Curriculum" id="curriculumResultSet">
 		<id column="curriculum_no" property="curriculumNo" />
 		<result column="curriculum_cont" property="curriculumCont" />
 		<result column="lesson_no" property="lessonNo" />
 		<result column="ref_cur_no" property="refCurNo" />
 		<result column="cur_level" property="curLevel" />
 		<result column="video_no" property="videoNo"/>
 	</resultMap>
 	
 	<resultMap type="LessonFAQ" id="lessonFAQResultSet">
 		<id column="lesson_no" property="lessonNo" />
 		<result column="faq_question" property="faqQuestion" />
 		<result column="faq_answer" property="faqAnswer" />
 	</resultMap>
 	
 	<resultMap type="MemVideo" id="memVideoResultSet">
 		<id column="video_no" property="videoNo" />
 		<result column="mem_no" property="memNo" />
 		<result column="status" property="status" />
 	</resultMap>
 	
 	<resultMap type="QnA" id="qnaResultSet">
 		<id column="qa_no" property="qnaNo" />
 		<result column="mem_no" property="memNo" />
 		<result column="lesson_no" property="lessonNo" />
 		<result column="question" property="question" />
 		<result column="answer" property="answer" />
 		<result column="q_enroll_date" property="questionEnrollDate" />
 		<result column="a_enroll_date" property="answerEnrollDate" />
 		<result column="q_status" property="questionStatus" />
 		<result column="a_status" property="answerStatus" />
 		<result column="mem_pic" property="memPic" />
 		<result column="tutor_pic" property="tutorPic" />
 		<result column="tutor_no" property="tutorNo" />
 		<result column="nickname" property="memNick" />
 		<result column="tutor_nick" property="tutorNick" />
 		<result column="rnum" property="rnum" />
 	</resultMap>
 	
 	<resultMap type="Video" id="videoResultSet">
 		<id column="video_no" property="videoNo" />
 		<result column="lesson_no" property="lessonNo" />
 		<result column="video_url" property="videoUrl" />
 		<result column="video_cont" property="videoCont" />
 		<result column="video_name" property="videoName" />
 		<result column="pre_video_no" property="preVideoNo" />
 		<result column="next_video_no" property="nextVideoNo" />
 		<result column="status" property="status" />
 	</resultMap>
 	
 	<resultMap type="Lesson" id="lessonResultSet">
 		<id column="lesson_no" property="lessonNo" />
 		<result column="mem_no" property="memNo" />
 		<result column="lesson_form" property="lessonForm" />
 		<result column="lesson_type" property="lessonType" />
 		<result column="lesson_group" property="lessonGroup" />
 		<result column="lesson_category" property="lessonCategory" />
 		<result column="lesson_title" property="lessonTitle" />
 		<result column="lesson_cover_img" property="lessonCoverImg" />
 		<result column="lesson_instr" property="lessonInstr" />
 		<result column="lesson_cont_no" property="lessonContNo" />
 		<result column="lesson_prepare" property="lessonPrepare" />
 		<result column="lesson_target" property="lessonTarget" />
 		<result column="like_count" property="likeCount" />
 		<result column="total_count" property="totalCount" />
 		<result column="period" property="period" />
 	</resultMap>
 	
 	<!-- sql문 -->
 	<!-- 레슨의 정보 가져오기 -->
 	<select id="selectLesson" resultMap="lessonResultSet" parameterType="Lesson">
 		select
		       lesson_no
		     , mem_no
		     , lesson_form
		     , lesson_type
		     , lesson_group
		     , lesson_category
		     , lesson_title
		     , lesson_cover_img
		     , lesson_instr
		     , lesson_cont_no
		     , lesson_prepare
		     , lesson_target
		     , like_count
		     , total_count
		     , period
		  from lesson
		 where status = 'Y'
  		   and lesson_no = #{lessonNo}
 	</select>
 	
 	<!-- curriculum들 가져오기 -->
 	<select id="selectCurriculum" resultMap="curriculumResultSet" parameterType="Lesson">
 		select
 			   curriculum_no
 			 , curriculum_cont
 			 , ref_cur_no
 			 , cur_level
 		  from curriculum
 		 where lesson_no = #{lessonNo}
 		 order
 		    by curriculum_no asc
 	</select>
 	
 	<select id="selectQnA" resultMap="qnaResultSet" parameterType="Lesson">
 		select
 			   *
 		  from (
 		  	   select
				      qa_no
				    , rownum rnum
				    , q.mem_no
				    , t.mem_no "tutor_no"
				    , q.lesson_no
				    , question
				    , answer
				    , m.mem_pic
			     	, t.tutor_pic
				 from qna q
				 join member m on (q.mem_no = m.mem_no)
				 join lesson l on (q.lesson_no = l.lesson_no)
				 join tutor t on (l.mem_no = t.mem_no)
				where q.lesson_no = 1
				  and q_status = 'Y'
				  and a_status = 'Y'
				order
				   by qa_no desc
 		  	   )
 		 where rnum = 1
 	</select>
 	
 	<select id="selectVideoCount" resultType="_int" parameterType="Lesson">
 		select
 			   count(status)
 		  from mem_video
 		 where video_no in 
 		 	 (
 		 	   select 
 		 	   	      video_no 
 		 	   	 from video 
 		 	   	where lesson_no = #{lessonNo}
 		 	 )
 		  and status='Y'
 		  and mem_no=#{memNo} 
 	</select>
 	
 	<select id="selectAverageStar" resultType="_int" parameterType="Lesson">
 		select
		       round((sum(star) / count(star)), 2) "avgStar"
		  from review
		 where lesson_no = #{lessonNo}
		   and status = 'Y'
 	</select>
 	
 	<select id="selectDetailFAQ" resultMap="lessonFAQResultSet" parameterType="Lesson">
 		select
 			   faq_question
 			 , faq_answer
 		  from lesson_faq
 		 where lesson_no = #{lessonNo}
 	</select>
 	 
 	<select id="selectDetailQnA" resultMap="qnaResultSet" parameterType="Lesson">
 		select
		       q.qa_no
		     , q.mem_no
		     , t.mem_no "tutor_no"
		     , q.lesson_no
		     , question
		     , answer
		     , to_char(q_enroll_date, 'YYYY/MM/DD HH24:MI') "q_enroll_date"
		     , a_enroll_date
		     , a_status
		     , m.mem_pic
		     , m.nickname
		     , t.tutor_pic
		     , tm.nickname "tutor_nick"
		  from qna q
		  join member m on(q.mem_no = m.mem_no)
		  join lesson l on(q.lesson_no = l.lesson_no)
		  join tutor t on(l.mem_no = t.mem_no)
		  join member tm on(t.mem_no = tm.mem_no)
		 where q.lesson_no = #{lessonNo}
		   and q_status = 'Y'
		 order
		    by qa_no desc
 	</select>
 	
 	<insert id="insertQuestion" parameterType="QnA">
 		insert
 		  into qna
 		  (
 		  	   qa_no
 		  	 , mem_no
 		  	 , lesson_no
 		  	 , question
 		  	 , q_enroll_date
 		  )
 		values
 		  (
 		       seq_qnano.nextval
 		     , #{memNo}
 		     , #{lessonNo}
 		     , #{question}
 		     , sysdate
 		  )  
 	</insert>
 	
 	<update id="updateQuestion" parameterType="QnA">
 		update qna
 		   set question = #{question}
 		     , q_enroll_date = sysdate
 		 where qa_no = #{qnaNo} 
 	</update>
 	
 	<update id="deleteQuestion" parameterType="QnA">
 		update qna
 		   set q_status = 'N'
 		 where qa_no = #{qnaNo} 
 	</update>
 	
 	<update id="insertAnswer" parameterType="QnA">
 		update qna
 		   set answer = #{answer}
 		     , a_enroll_date = sysdate
 		     , a_status = 'Y'
 		 where qa_no = #{qnaNo} 
 	</update>
 	
 	<update id="updateAnswer" parameterType="QnA">
 		update qna
 		   set answer = #{answer}
 		     , a_enroll_date = sysdate
 		 where qa_no = #{qnaNo} 
 	</update>
 	
 	<update id="deleteAnswer" parameterType="QnA">
 		update qna
 		   set a_status = 'N'
 		 where qa_no = #{qnaNo}
 	</update>
 	
 	<select id="videoList" parameterType="Lesson" resultMap="videoResultSet">
 		select
 			   video_no
 			 , video_url
 			 , video_cont
 			 , video_name
 			 , mv.status
 		  from video v
 		  join mem_video mv using(video_no)
 		 where lesson_no = #{lessonNo}
 		   and mem_no = #{memNo}
 	</select>
 	
 	<update id="updateVideoStatus" parameterType="MemVideo">
 		update mem_video
 		   set status = 'Y'
 		 where video_no = #{videoNo}
 		   and mem_no = #{memNo}
 	</update>
 	
 	<select id="detailVideo" resultMap="videoResultSet" parameterType="MemVideo">
 		<![CDATA[
			select
				   video_no
				 , lesson_no
				 , video_url
				 , video_name
				 , video_cont
				 , (select max(video_no) from video where video_no < #{videoNo} and lesson_no = #{lessonNo}) "pre_video_no"
				 , (select min(video_no) from video where video_no > #{videoNo} and lesson_no = #{lessonNo}) "next_video_no"
			  from video
			 where video_no = #{videoNo}
		 ]]> 
 	</select>
 	
 	<insert id="insertCurriculum" parameterType="Curriculum">
 		insert
 		  into curriculum
 		  (
 		  	   curriculum_no
 		  	 , curriculum_cont
 		  	 , lesson_no
 		  	 , cur_level
 		  )
 		values
 		  (
 		       seq_cur_no.nextval
 		     , #{curriculumCont}
 		     , #{lessonNo}
 		     , #{curLevel}
 		  )  
 	</insert>
 	<insert id="insertVideo" parameterType="Video">
 		insert
 		  into video
 		  (
 		  	   video_no
 		  	 , lesson_no
 		  	 , video_name
 		  	 , video_cont
 		  	 , video_url
 		  )
 		  values
 		  (
 		  	   seq_vno.nextval
 		  	 , #{lessonNo}
 		  	 , #{videoName}
 		  	 , #{videoCont}
 		  	 , #{videoUrl}
 		  )
 	</insert>
 	<select id="CurriculumListNo" resultType="_int">
		select
		       count(*)
		  from curriculum
 			
 	</select>
</mapper>